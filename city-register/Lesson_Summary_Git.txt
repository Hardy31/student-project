Система Контроля Версий

Выпуск 75. Знакомимся с Git.
https://www.youtube.com/watch?v=EPDckJ-22A8&list=PLyxk-1FCKqockmP-fXZmHQ7UlYP3qvZRa&index=75

Установка Git
Репозитарий этого проекта находится здесь:
cd Hardy/LearnJava/

git status

Файл   .gitignore
Как правило он содержит  следующие папки:
target          - Собранный проект Maven
out             - Создает Idea.
.idea/          - Файлы настройки Jdea
.DS_Store       - Файл МАС ОС


git add   добавляет файл в список для отслеживания
git add .  или git add ~A  (all)

git commit -m "Название созданного Комита"

git log

Для удаления файла из отслеживания
 Случайно набрали git add bedFile
 для этого
 git reset HEAD bedFile
 или
 git reset HEAD .        Удалит Все ранее добавленные файлы







Выпуск 76. Git - команды для отмены.
https://www.youtube.com/watch?v=A79qJbmZ738&list=PLyxk-1FCKqockmP-fXZmHQ7UlYP3qvZRa&index=76

git reset HEAD bedFile      Удалили из отслеживания bedFile который ранее добавили через git add .

git ceckout bedFile       ОТКАТИТ ВСЕ ИЗМЕНЕНИЯ ДО ПЕРВОНОЧАЛЬНОГО СОСТОЯНИЯ

Ситуация  когда мы закомитили изменения. и поняли что этот комит надо отменить.
Жесткое удаление =
git reset --hard HEAD~  (Удалит Последний комит)
git reset --hard HEAD~2  (Удалит 2а последних комита)

Ситуация Когда мы запушили  комит и тольео его мы хотим удалить.
для этого выполняем две команды :
git reset --hard HEAD~  (Удалит Последний комит локально)
git push -f             (Удалит Последний комит на удаленном сервере)
И голова автоматически подтянется  к последнему комиту.





Выпуск 77. Совместная работа с Git - теги, бранчи, релизы.
https://www.youtube.com/watch?v=0MNmFgNU4rY&list=PLyxk-1FCKqockmP-fXZmHQ7UlYP3qvZRa&index=77

tag                                             - фиксация   какого то состояния (логического  состояния).
                   все файлы  получают флаг этого состояния.
                   отметка важного события
branch                                          - Ветка


Выпуск 78. Работа с Git - как работать с бранчами.
https://www.youtube.com/watch?v=TG4uWO4R4Gk&list=PLyxk-1FCKqockmP-fXZmHQ7UlYP3qvZRa&index=78

git branch                  - вывелет весь список и пометит активную
git branch city             - вывперейлет на ветку city? Ели ее нет создаст но останется на старой
git checkout city           - gерейлет на ветку city
git checkout -b newCity     - создать и перейлет на ветку newCity

для удаления  ветки ---------------
 для начала необходимо уйти с этой ветки на другую .
git checkout city
git branch -D newCity       - удалит не активную ветку newCity

git stash                   - сохраняет последние изменения во временное хранилище, необходимо сделать, если вы пытаетесь  уйти с редактируемого комита.
после каких то монипуляций, возврашаемся   в нашу ветку и видим, что на  не сохранена!!!

для того чтобы вернуться к  состоянию  сохраненному в stash набираем команду
git stash pop
git branch -v               - развернутая информация по веткам  (последний рег код и  комментарий )

git push  --set -upstriam origin city       -(установить источник потока ветку city)



Выпуск 79. Работа с Git - подтягиваем изменения из основной ветки.
https://www.youtube.com/watch?v=r1-O4D_5278&list=PLyxk-1FCKqockmP-fXZmHQ7UlYP3qvZRa&index=79

git fatch               -считывает из удаленного рипозитария данные и раскладывает все изменения (как в ворде сличить, сравнить)
git fatch -v            -рассказывает какие изменения в каких ветках  и в каких не совподения

для  дальнейщих действий необходимо  обновить  голову  ветки мастер на локальном  до уровня удаленного original/master

git checkout master      - перешли на ветку мастер и гит подскажет, что необходимо подтянуть данные в локальный из удаленного
                        use "git pull" to update your local branch

шаг второй
обьединение через подтягивание данных из бнавленной ветки мастера в ветку city
для этого возвращаемся в ветку city

git checkout city       - на эту ветку будем втягивать  обналения
gir marge master        она сольет две ветки и создаст новый комит на локальном гите
                после чего необходимо залить обнавления в удаленный репозитарий
git pull

ситуация с одновременным изменением


Выпуск 80. Работа с Git - для чего нужен pull request.
https://www.youtube.com/watch?v=OVL6YngpXk0&list=PLyxk-1FCKqockmP-fXZmHQ7UlYP3qvZRa&index=81
 Обьяснение ситуации  первые 7 минут.





